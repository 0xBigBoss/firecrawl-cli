name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        bun-version: [latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      # Docker is only available on Linux runners in GitHub Actions
      # macOS runners don't support Docker due to virtualization constraints
      # Windows runners have limited Docker support (Windows containers only)
      - name: Start Firecrawl services (Linux only)
        if: runner.os == 'Linux'
        run: |
          cp .env.ci .env
          docker compose up -d
          
          # Wait for services to be ready with better logging
          echo "Waiting for services to start..."
          sleep 10
          
          # Check individual services first
          echo "Checking Redis..."
          timeout 60 bash -c 'until docker compose exec redis redis-cli ping; do echo -n "."; sleep 2; done' || true
          
          echo "Checking Playwright service..."
          timeout 120 bash -c 'until curl -sf http://localhost:3000/health 2>/dev/null || docker compose logs playwright-service | grep -q "listening"; do echo -n "."; sleep 2; done' || true
          
          # Wait for API with multiple endpoint checks and simpler validation
          echo "Waiting for Firecrawl API to be ready..."
          timeout 420 bash -c 'until [[ $(curl -s -o /dev/null -w "%{http_code}" http://localhost:3002/ 2>/dev/null) =~ ^(200|404|405)$ ]] || [[ $(curl -s -o /dev/null -w "%{http_code}" http://localhost:3002/health 2>/dev/null) =~ ^(200|404)$ ]]; do echo -n "."; sleep 3; done' || {
            echo "API health check failed. Showing detailed logs:"
            echo "=== Direct curl test ==="
            curl -v http://localhost:3002/ || true
            echo "=== API Container Logs ==="
            docker compose logs api | tail -50
            echo "=== Worker Container Logs ==="
            docker compose logs worker | tail -20
            echo "=== Container Status ==="
            docker compose ps
            echo "=== Port Check ==="
            netstat -tlnp | grep 3002 || true
            exit 1
          }
          echo " Ready!"
          echo "Firecrawl API is running at http://localhost:3002"

      - name: Note about Firecrawl on non-Linux platforms
        if: runner.os != 'Linux'
        run: |
          echo "ℹ️  Firecrawl services not started on ${{ runner.os }}"
          echo "   Docker is not available on macOS runners"
          echo "   Windows has limited Docker support"
          echo "   Tests will run with mocked Firecrawl API"

      - name: Build binary
        run: bun run build

      - name: Run linter
        run: bun lint

      - name: Run tests
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            echo "Running full test suite with Firecrawl connectivity tests"
            bun run test:ci:linux
          else
            echo "Running unit tests only (Docker not available on ${{ runner.os }})"
            bun run test:ci:other
          fi
        shell: bash
        env:
          # Only set API URL on Linux where Firecrawl is actually running
          FIRECRAWL_API_URL: ${{ runner.os == 'Linux' && 'http://localhost:3002' || '' }}
          CI: true

      - name: Test built binary
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ./bin/fcrawl.exe --version
          else
            ./bin/fcrawl --version
          fi
        shell: bash


      - name: Stop Firecrawl services
        if: runner.os == 'Linux' && always()
        run: docker compose down
